From: Nick Wellnhofer <wellnhofer@aevum.de>
Date: Sun, 29 Oct 2017 01:04:55 +0200
Subject: Fix heap overread in xsltFormatNumberConversion

An empty decimal-separator could cause a heap overread. This can be
exploited to leak a couple of bytes after the buffer that holds the
pattern string.

Found with afl-fuzz and ASan.

Origin: upstream, https://git.gnome.org/browse/libxslt/commit/?id=eb1030de31165b68487f288308f9d1810fed6880
Bug-Debian: https://bugs.debian.org/842570
Bug-Debian: https://security-tracker.debian.org/tracker/CVE-2016-4738
---
 libxslt/numbers.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/libxslt/numbers.c b/libxslt/numbers.c
index 0b5b412..1236d52 100644
--- a/libxslt/numbers.c
+++ b/libxslt/numbers.c
@@ -1099,7 +1099,8 @@ xsltFormatNumberConversion(xsltDecimalFormatPtr self,
     }
 
     /* We have finished the integer part, now work on fraction */
-    if (xsltUTF8Charcmp(the_format, self->decimalPoint) == 0) {
+    if ( (*the_format != 0) &&
+         (xsltUTF8Charcmp(the_format, self->decimalPoint) == 0) ) {
         format_info.add_decimal = TRUE;
 	the_format += xsltUTF8Size(the_format);	/* Skip over the decimal */
     }
